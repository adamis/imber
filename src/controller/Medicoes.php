<?php

	/**
	 * Generated by Getz Framework
	 *
	 * @author MÃ¡rio Sakamoto <mskamot@gmail.com>
	 * @see http://mariosakamoto.com/getz
	 */
	 
	use lib\getz;
	use src\model;	 

	require_once($_DOCUMENT_ROOT . "/lib/getz/Activator.php");
	
	/*
	 * Filters
	 */
	$where = "";
	
	if ($search != "")
		$where = "medicoes.data_hora LIKE \"%" . $search . "%\"";	
		
	if ($code != "")
		$where = "medicoes.id = " . $code;
		
	if ($order != "") {
		$o = explode("<gz>", $order);

		$limit = $o[0] . " " . $o[1] . " LIMIT " . 
				(($position * $itensPerPage) - $itensPerPage) . ", " . $itensPerPage;
				
	} else
		$limit = "medicoes.id DESC LIMIT " . 
				(($position * $itensPerPage) - $itensPerPage) . ", " . $itensPerPage;	
	
	/**************************************************
	 * Webpage
	 **************************************************/		
	
	/*
	 * Page
	 */
	if ($method == "page") {
		/*
		 * SEO
		 */
		$darth->setTitle($screen);
		$darth->setDescription("");
		$darth->setKeywords("");
		
		$daoFactory->beginTransaction();
		$response[0]["medicoes"] = $daoFactory->getMedicoesDao()->read($where, $limit, true);
		$daoFactory->close();

		echo $darth->view("", $_DOCUMENT_ROOT . $_PACKAGE . "/html/header.htm");
		echo $darth->view($response, $_DOCUMENT_ROOT . $_PACKAGE . "/html/medicoes.htm");
		echo $darth->view("", $_DOCUMENT_ROOT . $_PACKAGE . "/html/footer.htm");
	}
	
	/**************************************************
	 * Webservice
	 **************************************************/	

	/*
	 * Method
	 */
	else if ($method == "method")
		echo "Parameters: " . (isset($_GET["parameters"]) ? $_GET["parameters"] : "");	 
	
	/*
	 * Create
	 * @post ws/medicoes/create
	 * "form" : "humidade_ar<gz>pressao_ar<gz>temperatura_ar<gz>altura_mar<gz>humidade_solo"
	 */
	else if ($method == "ws-create") {
		$medicoes = new model\Medicoes();
		$medicoes->setData_hora(date("Y-m-d H:i:s", (time() - 3600 * 3)));
		$medicoes->setAltura_mar(logicNull(controllerDouble($form[2])));
		$medicoes->setHumidade_ar(logicNull(controllerDouble($form[4])));
		$medicoes->setHumidade_solo(logicNull(controllerDouble($form[3])));
		$medicoes->setPressao_ar(logicNull(controllerDouble($form[1])));
		$medicoes->setTemperatura_ar(logicNull(controllerDouble($form[0])));
		
		$medicoes->setCadastrado(date("Y-m-d H:i:s", (time() - 3600 * 3)));
		$medicoes->setModificado(date("Y-m-d H:i:s", (time() - 3600 * 3)));
		
		$daoFactory->beginTransaction();
		$resultDao = $daoFactory->getMedicoesDao()->create($medicoes);

		if ($resultDao) {
			$daoFactory->commit();
			$response[0]["message"] = "success";
		} else {							
			$daoFactory->rollback();
			$response[0]["message"] = "error";
		}

		$daoFactory->close();

		echo $darth->json($response);
	}
	
	/*
	 * Read
	 */
	else if ($method == "ws-read") {
		$daoFactory->beginTransaction();
		
		/*FILTROS DE DATAS*/
		$inicial = $search;
		$final   = $position;

		$where = "medicoes.data_hora between '" . $inicial . " 00:00:00' and '" . $final . " 23:59:59'";	
		//echo $where;
		$response[0]["medicoes"] = $daoFactory->getMedicoesDao()->read($where, "", false);
		
		$daoFactory->close();

		echo $darth->json($response[0]["medicoes"]);
	}
	
	
	/*
	 * Update
	 *
	else if ($method == "ws-update") {	
		$medicoes = new model\Medicoes();
		$medicoes->setId($code);
		$medicoes->setData_hora(logicNull(controllerDateTime($form[0])));
		$medicoes->setAltura_mar(logicNull(controllerDouble($form[1])));
		$medicoes->setHumidade_ar(logicNull(controllerDouble($form[2])));
		$medicoes->setHumidade_solo(logicNull(controllerDouble($form[3])));
		$medicoes->setPressao_ar(logicNull(controllerDouble($form[4])));
		$medicoes->setTemperatura_ar(logicNull(controllerDouble($form[5])));
		$medicoes->setCadastrado(date("Y-m-d H:i:s", (time() - 3600 * 3)));
		$medicoes->setModificado(date("Y-m-d H:i:s", (time() - 3600 * 3)));
		
		$daoFactory->beginTransaction();
		$resultDao = $daoFactory->getMedicoesDao()->update($medicoes);

		if ($resultDao) {
			$daoFactory->commit();
			$response[0]["message"] = "success";
		} else {							
			$daoFactory->rollback();
			$response[0]["message"] = "error";
		}

		$daoFactory->close();

		echo $darth->json($response);
	}
	*/
	
	/* 
	 * Delete
	 *
	else if ($method == "ws-delete") {
		$result = true;
		$lines = explode("<gz>", $code);

		$daoFactory->beginTransaction();

		for ($i = 0; $i < sizeof($lines); $i++) {
			$where = "medicoes.id = " . $lines[$i];
			
			$resultDao = $daoFactory->getMedicoesDao()->delete($where);
			$result = !$result ? false : (!$resultDao ? false : true);
		}

		if ($result) {
			$daoFactory->commit();
			$response[0]["message"] = "success";
		} else {							
			$daoFactory->rollback();
			$response[0]["message"] = "error";
		}

		$daoFactory->close();

		echo $darth->json($response);
	} 	
	*/
	
	/**************************************************
	 * System
	 **************************************************/	
	
	else {
		if (!getActiveSession($_ROOT . $_MODULE)) 
			echo "<script>goTo(\"/login/1\");</script>";
		else {
			/*
			 * Create
			 */
			if ($method == "stateCreate") {
				if (!getPermission($_ROOT . $_MODULE, $daoFactory, $screen, $method))
					echo "<script>goTo(\"/login/1\");</script>";	
				else {
					$daoFactory->beginTransaction();
					$response[0]["titles"] = $daoFactory->getTelasDao()->read("telas.identificador = '" . $screen . "'", "", true);
					$daoFactory->close();

					echo $darth->view(getMenu($daoFactory, $_USER, $screen), $_DOCUMENT_ROOT . $_PACKAGE . "/html/menus/menusCST.htm");
					echo $darth->view($response, $_DOCUMENT_ROOT . $_PACKAGE . "/html/medicoes/medicoesCRT.htm");
				}
			}

			/*
			 * Read
			 */
			else if ($method == "stateRead") {
				if (!getPermission($_ROOT . $_MODULE, $daoFactory, $screen, $method))
					echo "<script>goTo(\"/login/1\");</script>";	
				else {
					$daoFactory->beginTransaction();
					$response[0]["titles"] = $daoFactory->getTelasDao()->read("telas.identificador = '" . $screen . "'", "", true);
					$response[0]["medicoes"] = $daoFactory->getMedicoesDao()->read($where, $limit, true);
					$daoFactory->close();

					echo $darth->view(getMenu($daoFactory, $_USER, $screen), $_DOCUMENT_ROOT . $_PACKAGE . "/html/menus/menusCST.htm");
					echo $darth->view($response, $_DOCUMENT_ROOT . $_PACKAGE . "/html/medicoes/medicoesRD.htm");
				}
			}

			/*
			 * Update
			 */
			else if ($method == "stateUpdate") {
				if (!getPermission($_ROOT . $_MODULE, $daoFactory, $screen, $method))
					echo "<script>goTo(\"/login/1\");</script>";	
				else {
					$daoFactory->beginTransaction();
					$response[0]["titles"] = $daoFactory->getTelasDao()->read("telas.identificador = '" . $screen . "'", "", true);
					$response[0]["medicoes"] = $daoFactory->getMedicoesDao()->read($where, "", true);
					$daoFactory->close();

					echo $darth->view(getMenu($daoFactory, $_USER, $screen), $_DOCUMENT_ROOT . $_PACKAGE . "/html/menus/menusCST.htm");
					echo $darth->view($response, $_DOCUMENT_ROOT . $_PACKAGE . "/html/medicoes/medicoesUPD.htm");
				}
			}

			/*
			 * Called
			 */
			else if ($method == "stateCalled") {
				if (!getPermission($_ROOT . $_MODULE, $daoFactory, $screen, $method))
					echo "<script>goTo(\"/login/1\");</script>";	
				else {
					/*
					 * Insert your foreign key here
					 */
					if ($where != "")
						$where .= " AND medicoes.@_FOREIGN_KEY = " . $base;
					else 
						$where = "medicoes.@_FOREIGN_KEY = " . $base;
						
					$daoFactory->beginTransaction();
					$response[0]["titles"] = $daoFactory->getTelasDao()->read("telas.identificador = '" . $screen . "'", "", true);
					$response[0]["medicoes"] = $daoFactory->getMedicoesDao()->read($where, $limit, true);
					$daoFactory->close();

					echo $darth->view(getMenu($daoFactory, $_USER, $screen), $_DOCUMENT_ROOT . $_PACKAGE . "/html/menus/menusCST.htm");
					echo $darth->view($response, $_DOCUMENT_ROOT . $_PACKAGE . "/html/medicoes/medicoesCLL.htm");
				}
			}

			/*
			 * Screen
			 */
			else if ($method == "screen") {
				if ($base != "") {
					$arrBase = explode("<gz>", $base);
					
					if (sizeof($arrBase) > 1)
						$where = "medicoes.@_FOREIGN_KEY = " . $arrBase[1];
				}
				
				$limit = "medicoes.id DESC LIMIT " . (($position * 5) - 5) . ", 5";

				$daoFactory->beginTransaction();
				$response[0]["titles"] = $daoFactory->getTelasDao()->read("telas.identificador = '" . $screen . "'", "", true);
				$response[0]["medicoes"] = $daoFactory->getMedicoesDao()->read($where, $limit, true);
				$daoFactory->close();

				echo $darth->view($response, $_DOCUMENT_ROOT . $_PACKAGE . "/html/medicoes/medicoesSCR.htm") . 
						"<size>" . $response[0]["medicoes"][0]["medicoes.size"] . "<theme>" . 
						$_USER[0]["usuarios"][0]["temas.identificador"];
			}

			/*
			 * Screen handler
			 */
			else if ($method == "screenHandler") {	
				$where = "";

				// Get value from combo
				$cmb = explode("<gz>", $search);

				if ($cmb[1] != "")
					$where = "medicoes.id = " . $cmb[1];

				$daoFactory->beginTransaction();
				$response[0]["medicoes"] = $daoFactory->getMedicoesDao()->comboScr($where);
				$daoFactory->close();

				echo $darth->view($response, $_DOCUMENT_ROOT . $_PACKAGE . "/html/medicoes/medicoesCMB.htm");
			}

			/*
			 * Create
			 */
			else if ($method == "create") {
				if (!getPermission($_ROOT . $_MODULE, $daoFactory, $screen, $method)) {
					$response[0]["message"] = "permission";
					
					echo $darth->json($response);
				} else {
					$medicoes = new model\Medicoes();
					$medicoes->setData_hora(logicNull(controllerDateTime($form[0])));
					$medicoes->setAltura_mar(logicNull(controllerDouble($form[4])));
					$medicoes->setHumidade_ar(logicNull(controllerDouble($form[1])));
					$medicoes->setHumidade_solo(logicNull(controllerDouble($form[5])));
					$medicoes->setPressao_ar(logicNull(controllerDouble($form[2])));
					$medicoes->setTemperatura_ar(logicNull(controllerDouble($form[3])));
					$medicoes->setCadastrado(date("Y-m-d H:i:s", (time() - 3600 * 3)));
					$medicoes->setModificado(date("Y-m-d H:i:s", (time() - 3600 * 3)));
					
					$daoFactory->beginTransaction();
					$resultDao = $daoFactory->getMedicoesDao()->create($medicoes);

					if ($resultDao) {
						$daoFactory->commit();
						$response[0]["message"] = "success";				
					} else {							
						$daoFactory->rollback();
						$response[0]["message"] = "error";
					}

					$daoFactory->close();

					echo $darth->json($response);
				}
			}

			/*
			 * Action update
			 */
			else if ($method == "update") {	
				if (!getPermission($_ROOT . $_MODULE, $daoFactory, $screen, $method)) {
					$response[0]["message"] = "permission";
					
					echo $darth->json($response);
				} else {
					$medicoes = new model\Medicoes();
					$medicoes->setId($code);
					$medicoes->setData_hora(logicNull(controllerDateTime($form[0])));
					$medicoes->setAltura_mar(logicNull(controllerDouble($form[4])));
					$medicoes->setHumidade_ar(logicNull(controllerDouble($form[1])));
					$medicoes->setHumidade_solo(logicNull(controllerDouble($form[5])));
					$medicoes->setPressao_ar(logicNull(controllerDouble($form[2])));
					$medicoes->setTemperatura_ar(logicNull(controllerDouble($form[3])));
					$medicoes->setCadastrado(date("Y-m-d H:i:s", (time() - 3600 * 3)));
					$medicoes->setModificado(date("Y-m-d H:i:s", (time() - 3600 * 3)));
					
					$daoFactory->beginTransaction();
					$resultDao = $daoFactory->getMedicoesDao()->update($medicoes);

					if ($resultDao) {
						$daoFactory->commit();
						$response[0]["message"] = "success";
					} else {							
						$daoFactory->rollback();
						$response[0]["message"] = "error";
					}

					$daoFactory->close();

					echo $darth->json($response);
				}
			}
			
			/* 
			 * Action delete
			 */
			else if ($method == "delete") {
				if (!getPermission($_ROOT . $_MODULE, $daoFactory, $screen, $method)) {
					$response[0]["message"] = "permission";
					
					echo $darth->json($response);
				} else {
					$result = true;
					$lines = explode("<gz>", $code);

					$daoFactory->beginTransaction();

					for ($i = 1; $i < sizeof($lines); $i++) {
						$where = "medicoes.id = " . $lines[$i];
						
						$resultDao = $daoFactory->getMedicoesDao()->delete($where);
						$result = !$result ? false : (!$resultDao ? false : true);
					}

					if ($result) {
						$daoFactory->commit();
						$response[0]["message"] = "success";
					} else {							
						$daoFactory->rollback();
						$response[0]["message"] = "error";
					}

					$daoFactory->close();

					echo $darth->json($response);	
				}
			}
		}
	}

?>